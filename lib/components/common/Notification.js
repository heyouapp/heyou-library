var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.Notification=void 0;var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _core=require("../core");var _account=require("../account");var _utils=require("../../utils");var _jsxFileName="/Users/juanmanuelcb/Projects/Heyou/Library/src/components/common/Notification.tsx";var Notification=function Notification(_props){return React.createElement(_core.Card,{style:styles.container,__source:{fileName:_jsxFileName,lineNumber:14}},React.createElement(_reactNative.View,{style:styles.header,__source:{fileName:_jsxFileName,lineNumber:15}},React.createElement(_reactNative.View,{style:styles.content,__source:{fileName:_jsxFileName,lineNumber:16}},React.createElement(_account.ProfilePicture,{__source:{fileName:_jsxFileName,lineNumber:17}}),React.createElement(_core.Text,{style:styles.label,type:"semibold",__source:{fileName:_jsxFileName,lineNumber:18}},"Notification Label")),React.createElement(_core.Text,{style:styles.time,small:true,__source:{fileName:_jsxFileName,lineNumber:22}},"5 min")),React.createElement(_core.Text,{__source:{fileName:_jsxFileName,lineNumber:26}},"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis imperdiet lacus ac lectus porttitor vehicula."));};exports.Notification=Notification;var styles=_reactNative.StyleSheet.create({container:{backgroundColor:_utils.Colors.greyLight,paddingHorizontal:15},header:{marginBottom:7.5,alignItems:'center',justifyContent:'space-between',flexDirection:'row'},content:{alignItems:'center',flexDirection:'row'},label:{marginLeft:10},time:{color:_utils.Colors.neutralLight}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2NvbW1vbi9Ob3RpZmljYXRpb24udHN4Il0sIm5hbWVzIjpbIk5vdGlmaWNhdGlvbiIsIl9wcm9wcyIsInN0eWxlcyIsImNvbnRhaW5lciIsImhlYWRlciIsImNvbnRlbnQiLCJsYWJlbCIsInRpbWUiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiYmFja2dyb3VuZENvbG9yIiwiQ29sb3JzIiwiZ3JleUxpZ2h0IiwicGFkZGluZ0hvcml6b250YWwiLCJtYXJnaW5Cb3R0b20iLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJmbGV4RGlyZWN0aW9uIiwibWFyZ2luTGVmdCIsImNvbG9yIiwibmV1dHJhbExpZ2h0Il0sIm1hcHBpbmdzIjoiMEtBQUEsb0RBQ0EseUNBR0EsNkJBQ0EsbUNBQ0Esa0MscUdBTUEsR0FBTUEsQ0FBQUEsWUFBeUMsQ0FBRyxRQUE1Q0EsQ0FBQUEsWUFBNEMsQ0FBQUMsTUFBTSxRQUNwRCxxQkFBQyxVQUFELEVBQU0sS0FBSyxDQUFFQyxNQUFNLENBQUNDLFNBQXBCLGlEQUNJLG9CQUFDLGlCQUFELEVBQU0sS0FBSyxDQUFFRCxNQUFNLENBQUNFLE1BQXBCLGlEQUNJLG9CQUFDLGlCQUFELEVBQU0sS0FBSyxDQUFFRixNQUFNLENBQUNHLE9BQXBCLGlEQUNJLG9CQUFDLHVCQUFELGtEQURKLENBRUksb0JBQUMsVUFBRCxFQUFNLEtBQUssQ0FBRUgsTUFBTSxDQUFDSSxLQUFwQixDQUEyQixJQUFJLENBQUMsVUFBaEMsc0VBRkosQ0FESixDQU9JLG9CQUFDLFVBQUQsRUFBTSxLQUFLLENBQUVKLE1BQU0sQ0FBQ0ssSUFBcEIsQ0FBMEIsS0FBSyxLQUEvQix5REFQSixDQURKLENBWUksb0JBQUMsVUFBRCxnS0FaSixDQURvRCxFQUF4RCxDLGtDQW9CQSxHQUFNTCxDQUFBQSxNQUFNLENBQUdNLHdCQUFXQyxNQUFYLENBQWtCLENBQzdCTixTQUFTLENBQUUsQ0FDUE8sZUFBZSxDQUFFQyxjQUFPQyxTQURqQixDQUVQQyxpQkFBaUIsQ0FBRSxFQUZaLENBRGtCLENBSzdCVCxNQUFNLENBQUUsQ0FDSlUsWUFBWSxDQUFFLEdBRFYsQ0FFSkMsVUFBVSxDQUFFLFFBRlIsQ0FHSkMsY0FBYyxDQUFFLGVBSFosQ0FJSkMsYUFBYSxDQUFFLEtBSlgsQ0FMcUIsQ0FXN0JaLE9BQU8sQ0FBRSxDQUNMVSxVQUFVLENBQUUsUUFEUCxDQUVMRSxhQUFhLENBQUUsS0FGVixDQVhvQixDQWU3QlgsS0FBSyxDQUFFLENBQ0hZLFVBQVUsQ0FBRSxFQURULENBZnNCLENBa0I3QlgsSUFBSSxDQUFFLENBQ0ZZLEtBQUssQ0FBRVIsY0FBT1MsWUFEWixDQWxCdUIsQ0FBbEIsQ0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFZpZXcgfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG4vLyBMaWJyYXJ5XG5pbXBvcnQgeyBUZXh0LCBDYXJkIH0gZnJvbSAnY29tcG9uZW50cy9jb3JlJztcbmltcG9ydCB7IFByb2ZpbGVQaWN0dXJlIH0gZnJvbSAnY29tcG9uZW50cy9hY2NvdW50JztcbmltcG9ydCB7IENvbG9ycyB9IGZyb20gJ3V0aWxzJztcblxuZXhwb3J0IGludGVyZmFjZSBOb3RpZmljYXRpb25Qcm9wcyB7XG4gICAgcmV2aWV3PzogYm9vbGVhbjtcbn1cblxuY29uc3QgTm90aWZpY2F0aW9uOiBSZWFjdC5GQzxOb3RpZmljYXRpb25Qcm9wcz4gPSBfcHJvcHMgPT4gKFxuICAgIDxDYXJkIHN0eWxlPXtzdHlsZXMuY29udGFpbmVyfT5cbiAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5oZWFkZXJ9PlxuICAgICAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250ZW50fT5cbiAgICAgICAgICAgICAgICA8UHJvZmlsZVBpY3R1cmUgLz5cbiAgICAgICAgICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLmxhYmVsfSB0eXBlPVwic2VtaWJvbGRcIj5cbiAgICAgICAgICAgICAgICAgICAgTm90aWZpY2F0aW9uIExhYmVsXG4gICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgPC9WaWV3PlxuICAgICAgICAgICAgPFRleHQgc3R5bGU9e3N0eWxlcy50aW1lfSBzbWFsbD5cbiAgICAgICAgICAgICAgICA1IG1pblxuICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICA8L1ZpZXc+XG4gICAgICAgIDxUZXh0PlxuICAgICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2NpbmcgZWxpdC4gRHVpc1xuICAgICAgICAgICAgaW1wZXJkaWV0IGxhY3VzIGFjIGxlY3R1cyBwb3J0dGl0b3IgdmVoaWN1bGEuXG4gICAgICAgIDwvVGV4dD5cbiAgICA8L0NhcmQ+XG4pO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgY29udGFpbmVyOiB7XG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogQ29sb3JzLmdyZXlMaWdodCxcbiAgICAgICAgcGFkZGluZ0hvcml6b250YWw6IDE1XG4gICAgfSxcbiAgICBoZWFkZXI6IHtcbiAgICAgICAgbWFyZ2luQm90dG9tOiA3LjUsXG4gICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICBqdXN0aWZ5Q29udGVudDogJ3NwYWNlLWJldHdlZW4nLFxuICAgICAgICBmbGV4RGlyZWN0aW9uOiAncm93J1xuICAgIH0sXG4gICAgY29udGVudDoge1xuICAgICAgICBhbGlnbkl0ZW1zOiAnY2VudGVyJyxcbiAgICAgICAgZmxleERpcmVjdGlvbjogJ3JvdydcbiAgICB9LFxuICAgIGxhYmVsOiB7XG4gICAgICAgIG1hcmdpbkxlZnQ6IDEwXG4gICAgfSxcbiAgICB0aW1lOiB7XG4gICAgICAgIGNvbG9yOiBDb2xvcnMubmV1dHJhbExpZ2h0XG4gICAgfVxufSk7XG5cbmV4cG9ydCB7IE5vdGlmaWNhdGlvbiB9O1xuIl19