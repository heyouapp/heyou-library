var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.RequestVideo=void 0;var _extends2=_interopRequireDefault(require("@babel/runtime/helpers/extends"));var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _moment=_interopRequireDefault(require("moment"));var _core=require("../core");var _index=require("./index");var _jsxFileName="/Users/juanmanuelcb/Projects/Heyou/Library/src/components/common/RequestVideo.tsx";var RequestVideo=function RequestVideo(props){return React.createElement(_core.Card,{style:[styles.container,props.style],__source:{fileName:_jsxFileName,lineNumber:17}},React.createElement(_reactNative.View,{style:styles.header,__source:{fileName:_jsxFileName,lineNumber:18}},React.createElement(_core.Text,{small:true,__source:{fileName:_jsxFileName,lineNumber:19}},"Video completed on",' ',React.createElement(_core.Text,{type:"semibold",small:true,__source:{fileName:_jsxFileName,lineNumber:21}},(0,_moment.default)(props.completedAt).format('DD-MM-YYYY'))),React.createElement(_index.Share,{onPress:props.onShare,__source:{fileName:_jsxFileName,lineNumber:25}})),React.createElement(_core.Video,(0,_extends2.default)({},props,{__source:{fileName:_jsxFileName,lineNumber:27}})),props.review&&React.createElement(_index.Review,(0,_extends2.default)({},props.review,{style:styles.review,__source:{fileName:_jsxFileName,lineNumber:28}})));};exports.RequestVideo=RequestVideo;var styles=_reactNative.StyleSheet.create({container:{paddingTop:0},header:{paddingHorizontal:10,paddingVertical:7.5,flexDirection:'row',alignItems:'center',justifyContent:'space-between'},review:{paddingTop:15,paddingHorizontal:15}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2NvbW1vbi9SZXF1ZXN0VmlkZW8udHN4Il0sIm5hbWVzIjpbIlJlcXVlc3RWaWRlbyIsInByb3BzIiwic3R5bGVzIiwiY29udGFpbmVyIiwic3R5bGUiLCJoZWFkZXIiLCJjb21wbGV0ZWRBdCIsImZvcm1hdCIsIm9uU2hhcmUiLCJyZXZpZXciLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwicGFkZGluZ1RvcCIsInBhZGRpbmdIb3Jpem9udGFsIiwicGFkZGluZ1ZlcnRpY2FsIiwiZmxleERpcmVjdGlvbiIsImFsaWduSXRlbXMiLCJqdXN0aWZ5Q29udGVudCJdLCJtYXBwaW5ncyI6IjZVQUFBLG9EQUNBLHlDQUNBLHNEQUdBLDZCQUNBLDhCLHFHQVNBLEdBQU1BLENBQUFBLFlBQXlDLENBQUcsUUFBNUNBLENBQUFBLFlBQTRDLENBQUFDLEtBQUssUUFDbkQscUJBQUMsVUFBRCxFQUFNLEtBQUssQ0FBRSxDQUFDQyxNQUFNLENBQUNDLFNBQVIsQ0FBbUJGLEtBQUssQ0FBQ0csS0FBekIsQ0FBYixpREFDSSxvQkFBQyxpQkFBRCxFQUFNLEtBQUssQ0FBRUYsTUFBTSxDQUFDRyxNQUFwQixpREFDSSxvQkFBQyxVQUFELEVBQU0sS0FBSyxLQUFYLHNFQUN1QixHQUR2QixDQUVJLG9CQUFDLFVBQUQsRUFBTSxJQUFJLENBQUMsVUFBWCxDQUFzQixLQUFLLEtBQTNCLGlEQUNLLG9CQUFPSixLQUFLLENBQUNLLFdBQWIsRUFBMEJDLE1BQTFCLENBQWlDLFlBQWpDLENBREwsQ0FGSixDQURKLENBT0ksb0JBQUMsWUFBRCxFQUFPLE9BQU8sQ0FBRU4sS0FBSyxDQUFDTyxPQUF0QixpREFQSixDQURKLENBVUksb0JBQUMsV0FBRCwwQkFBV1AsS0FBWCxtREFWSixDQVdLQSxLQUFLLENBQUNRLE1BQU4sRUFBZ0Isb0JBQUMsYUFBRCwwQkFBWVIsS0FBSyxDQUFDUSxNQUFsQixFQUEwQixLQUFLLENBQUVQLE1BQU0sQ0FBQ08sTUFBeEMsa0RBWHJCLENBRG1ELEVBQXZELEMsa0NBZ0JBLEdBQU1QLENBQUFBLE1BQU0sQ0FBR1Esd0JBQVdDLE1BQVgsQ0FBa0IsQ0FDN0JSLFNBQVMsQ0FBRSxDQUNQUyxVQUFVLENBQUUsQ0FETCxDQURrQixDQUk3QlAsTUFBTSxDQUFFLENBQ0pRLGlCQUFpQixDQUFFLEVBRGYsQ0FFSkMsZUFBZSxDQUFFLEdBRmIsQ0FHSkMsYUFBYSxDQUFFLEtBSFgsQ0FJSkMsVUFBVSxDQUFFLFFBSlIsQ0FLSkMsY0FBYyxDQUFFLGVBTFosQ0FKcUIsQ0FXN0JSLE1BQU0sQ0FBRSxDQUNKRyxVQUFVLENBQUUsRUFEUixDQUVKQyxpQkFBaUIsQ0FBRSxFQUZmLENBWHFCLENBQWxCLENBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBTdHlsZVByb3AsIFZpZXcsIFZpZXdTdHlsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5pbXBvcnQgbW9tZW50IGZyb20gJ21vbWVudCc7XG5cbi8vIExpYnJhcnlcbmltcG9ydCB7IFRleHQsIENhcmQsIFZpZGVvLCBWaWRlb1Byb3BzIH0gZnJvbSAnY29tcG9uZW50cy9jb3JlJztcbmltcG9ydCB7IFNoYXJlLCBSZXZpZXcsIFJldmlld1Byb3BzIH0gZnJvbSAnY29tcG9uZW50cy9jb21tb24nO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlcXVlc3RWaWRlb1Byb3BzIGV4dGVuZHMgVmlkZW9Qcm9wcyB7XG4gICAgcmV2aWV3PzogUmV2aWV3UHJvcHM7XG4gICAgY29tcGxldGVkQXQ6IHN0cmluZztcbiAgICBvblNoYXJlOiAoKSA9PiB2b2lkO1xuICAgIHN0eWxlPzogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG59XG5cbmNvbnN0IFJlcXVlc3RWaWRlbzogUmVhY3QuRkM8UmVxdWVzdFZpZGVvUHJvcHM+ID0gcHJvcHMgPT4gKFxuICAgIDxDYXJkIHN0eWxlPXtbc3R5bGVzLmNvbnRhaW5lciwgcHJvcHMuc3R5bGVdfT5cbiAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5oZWFkZXJ9PlxuICAgICAgICAgICAgPFRleHQgc21hbGw+XG4gICAgICAgICAgICAgICAgVmlkZW8gY29tcGxldGVkIG9ueycgJ31cbiAgICAgICAgICAgICAgICA8VGV4dCB0eXBlPVwic2VtaWJvbGRcIiBzbWFsbD5cbiAgICAgICAgICAgICAgICAgICAge21vbWVudChwcm9wcy5jb21wbGV0ZWRBdCkuZm9ybWF0KCdERC1NTS1ZWVlZJyl9XG4gICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgPFNoYXJlIG9uUHJlc3M9e3Byb3BzLm9uU2hhcmV9IC8+XG4gICAgICAgIDwvVmlldz5cbiAgICAgICAgPFZpZGVvIHsuLi5wcm9wc30gLz5cbiAgICAgICAge3Byb3BzLnJldmlldyAmJiA8UmV2aWV3IHsuLi5wcm9wcy5yZXZpZXd9IHN0eWxlPXtzdHlsZXMucmV2aWV3fSAvPn1cbiAgICA8L0NhcmQ+XG4pO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgY29udGFpbmVyOiB7XG4gICAgICAgIHBhZGRpbmdUb3A6IDBcbiAgICB9LFxuICAgIGhlYWRlcjoge1xuICAgICAgICBwYWRkaW5nSG9yaXpvbnRhbDogMTAsXG4gICAgICAgIHBhZGRpbmdWZXJ0aWNhbDogNy41LFxuICAgICAgICBmbGV4RGlyZWN0aW9uOiAncm93JyxcbiAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbidcbiAgICB9LFxuICAgIHJldmlldzoge1xuICAgICAgICBwYWRkaW5nVG9wOiAxNSxcbiAgICAgICAgcGFkZGluZ0hvcml6b250YWw6IDE1XG4gICAgfVxufSk7XG5cbmV4cG9ydCB7IFJlcXVlc3RWaWRlbyB9O1xuIl19