var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.Request=void 0;var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _core=require("../core");var _account=require("../account");var _utils=require("../../utils");var _jsxFileName="/Users/juanmanuelcb/Projects/Heyou/Library/src/components/common/Request.tsx";var Request=function Request(props){return React.createElement(_core.Card,{style:[styles.container,props.style],onPress:props.onPress,__source:{fileName:_jsxFileName,lineNumber:19}},React.createElement(_account.ProfilePicture,{size:"medium",squared:true,__source:{fileName:_jsxFileName,lineNumber:20}}),React.createElement(_reactNative.View,{style:styles.content,__source:{fileName:_jsxFileName,lineNumber:21}},React.createElement(_reactNative.View,{__source:{fileName:_jsxFileName,lineNumber:22}},React.createElement(_core.Text,{type:"semibold",style:styles.fullName,__source:{fileName:_jsxFileName,lineNumber:23}},props.fullName),React.createElement(_core.Text,{__source:{fileName:_jsxFileName,lineNumber:26}},props.recipientLabel),React.createElement(_core.Text,{style:styles.time,small:true,__source:{fileName:_jsxFileName,lineNumber:27}},props.status)),React.createElement(_core.Button,{type:"secondary",small:true,__source:{fileName:_jsxFileName,lineNumber:31}},props.buttonText)));};exports.Request=Request;var styles=_reactNative.StyleSheet.create({container:{paddingHorizontal:15,flexDirection:'row'},content:{marginLeft:15,justifyContent:'space-between'},fullName:{lineHeight:18},time:{marginTop:5,color:_utils.Colors.neutralLight}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2NvbW1vbi9SZXF1ZXN0LnRzeCJdLCJuYW1lcyI6WyJSZXF1ZXN0IiwicHJvcHMiLCJzdHlsZXMiLCJjb250YWluZXIiLCJzdHlsZSIsIm9uUHJlc3MiLCJjb250ZW50IiwiZnVsbE5hbWUiLCJyZWNpcGllbnRMYWJlbCIsInRpbWUiLCJzdGF0dXMiLCJidXR0b25UZXh0IiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsInBhZGRpbmdIb3Jpem9udGFsIiwiZmxleERpcmVjdGlvbiIsIm1hcmdpbkxlZnQiLCJqdXN0aWZ5Q29udGVudCIsImxpbmVIZWlnaHQiLCJtYXJnaW5Ub3AiLCJjb2xvciIsIkNvbG9ycyIsIm5ldXRyYWxMaWdodCJdLCJtYXBwaW5ncyI6InFLQUFBLG9EQUNBLHlDQUdBLDZCQUNBLG1DQUNBLGtDLGdHQVdBLEdBQU1BLENBQUFBLE9BQStCLENBQUcsUUFBbENBLENBQUFBLE9BQWtDLENBQUFDLEtBQUssUUFDekMscUJBQUMsVUFBRCxFQUFNLEtBQUssQ0FBRSxDQUFDQyxNQUFNLENBQUNDLFNBQVIsQ0FBbUJGLEtBQUssQ0FBQ0csS0FBekIsQ0FBYixDQUE4QyxPQUFPLENBQUVILEtBQUssQ0FBQ0ksT0FBN0QsaURBQ0ksb0JBQUMsdUJBQUQsRUFBZ0IsSUFBSSxDQUFDLFFBQXJCLENBQThCLE9BQU8sS0FBckMsaURBREosQ0FFSSxvQkFBQyxpQkFBRCxFQUFNLEtBQUssQ0FBRUgsTUFBTSxDQUFDSSxPQUFwQixpREFDSSxvQkFBQyxpQkFBRCxrREFDSSxvQkFBQyxVQUFELEVBQU0sSUFBSSxDQUFDLFVBQVgsQ0FBc0IsS0FBSyxDQUFFSixNQUFNLENBQUNLLFFBQXBDLGlEQUNLTixLQUFLLENBQUNNLFFBRFgsQ0FESixDQUlJLG9CQUFDLFVBQUQsa0RBQU9OLEtBQUssQ0FBQ08sY0FBYixDQUpKLENBS0ksb0JBQUMsVUFBRCxFQUFNLEtBQUssQ0FBRU4sTUFBTSxDQUFDTyxJQUFwQixDQUEwQixLQUFLLEtBQS9CLGlEQUNLUixLQUFLLENBQUNTLE1BRFgsQ0FMSixDQURKLENBVUksb0JBQUMsWUFBRCxFQUFRLElBQUksQ0FBQyxXQUFiLENBQXlCLEtBQUssS0FBOUIsaURBQ0tULEtBQUssQ0FBQ1UsVUFEWCxDQVZKLENBRkosQ0FEeUMsRUFBN0MsQyx3QkFvQkEsR0FBTVQsQ0FBQUEsTUFBTSxDQUFHVSx3QkFBV0MsTUFBWCxDQUFrQixDQUM3QlYsU0FBUyxDQUFFLENBQ1BXLGlCQUFpQixDQUFFLEVBRFosQ0FFUEMsYUFBYSxDQUFFLEtBRlIsQ0FEa0IsQ0FLN0JULE9BQU8sQ0FBRSxDQUNMVSxVQUFVLENBQUUsRUFEUCxDQUVMQyxjQUFjLENBQUUsZUFGWCxDQUxvQixDQVM3QlYsUUFBUSxDQUFFLENBQ05XLFVBQVUsQ0FBRSxFQUROLENBVG1CLENBWTdCVCxJQUFJLENBQUUsQ0FDRlUsU0FBUyxDQUFFLENBRFQsQ0FFRkMsS0FBSyxDQUFFQyxjQUFPQyxZQUZaLENBWnVCLENBQWxCLENBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBTdHlsZVByb3AsIFZpZXcsIFZpZXdTdHlsZSB9IGZyb20gJ3JlYWN0LW5hdGl2ZSc7XG5cbi8vIExpYnJhcnlcbmltcG9ydCB7IFRleHQsIEJ1dHRvbiwgQ2FyZCB9IGZyb20gJ2NvbXBvbmVudHMvY29yZSc7XG5pbXBvcnQgeyBQcm9maWxlUGljdHVyZSB9IGZyb20gJ2NvbXBvbmVudHMvYWNjb3VudCc7XG5pbXBvcnQgeyBDb2xvcnMgfSBmcm9tICd1dGlscyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmVxdWVzdFByb3BzIHtcbiAgICBmdWxsTmFtZTogc3RyaW5nO1xuICAgIHJlY2lwaWVudExhYmVsOiBzdHJpbmc7XG4gICAgc3RhdHVzOiBzdHJpbmc7XG4gICAgYnV0dG9uVGV4dDogc3RyaW5nO1xuICAgIG9uUHJlc3M6ICgpID0+IHZvaWQ7XG4gICAgc3R5bGU/OiBTdHlsZVByb3A8Vmlld1N0eWxlPjtcbn1cblxuY29uc3QgUmVxdWVzdDogUmVhY3QuRkM8UmVxdWVzdFByb3BzPiA9IHByb3BzID0+IChcbiAgICA8Q2FyZCBzdHlsZT17W3N0eWxlcy5jb250YWluZXIsIHByb3BzLnN0eWxlXX0gb25QcmVzcz17cHJvcHMub25QcmVzc30+XG4gICAgICAgIDxQcm9maWxlUGljdHVyZSBzaXplPVwibWVkaXVtXCIgc3F1YXJlZCAvPlxuICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNvbnRlbnR9PlxuICAgICAgICAgICAgPFZpZXc+XG4gICAgICAgICAgICAgICAgPFRleHQgdHlwZT1cInNlbWlib2xkXCIgc3R5bGU9e3N0eWxlcy5mdWxsTmFtZX0+XG4gICAgICAgICAgICAgICAgICAgIHtwcm9wcy5mdWxsTmFtZX1cbiAgICAgICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICAgICAgPFRleHQ+e3Byb3BzLnJlY2lwaWVudExhYmVsfTwvVGV4dD5cbiAgICAgICAgICAgICAgICA8VGV4dCBzdHlsZT17c3R5bGVzLnRpbWV9IHNtYWxsPlxuICAgICAgICAgICAgICAgICAgICB7cHJvcHMuc3RhdHVzfVxuICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgIDwvVmlldz5cbiAgICAgICAgICAgIDxCdXR0b24gdHlwZT1cInNlY29uZGFyeVwiIHNtYWxsPlxuICAgICAgICAgICAgICAgIHtwcm9wcy5idXR0b25UZXh0fVxuICAgICAgICAgICAgPC9CdXR0b24+XG4gICAgICAgIDwvVmlldz5cbiAgICA8L0NhcmQ+XG4pO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgY29udGFpbmVyOiB7XG4gICAgICAgIHBhZGRpbmdIb3Jpem9udGFsOiAxNSxcbiAgICAgICAgZmxleERpcmVjdGlvbjogJ3JvdydcbiAgICB9LFxuICAgIGNvbnRlbnQ6IHtcbiAgICAgICAgbWFyZ2luTGVmdDogMTUsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnc3BhY2UtYmV0d2VlbidcbiAgICB9LFxuICAgIGZ1bGxOYW1lOiB7XG4gICAgICAgIGxpbmVIZWlnaHQ6IDE4XG4gICAgfSxcbiAgICB0aW1lOiB7XG4gICAgICAgIG1hcmdpblRvcDogNSxcbiAgICAgICAgY29sb3I6IENvbG9ycy5uZXV0cmFsTGlnaHRcbiAgICB9XG59KTtcblxuZXhwb3J0IHsgUmVxdWVzdCB9O1xuIl19