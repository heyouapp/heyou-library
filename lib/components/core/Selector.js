var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.Selector=void 0;var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _utils=require("../../utils");var _Text=require("./Text");var _jsxFileName="/Users/juanmanuelcb/Projects/Heyou/heyou-library/src/components/core/Selector.tsx";var Selector=function Selector(props){if(!props.data){return null;}return React.createElement(_reactNative.View,{style:styles.container,__source:{fileName:_jsxFileName,lineNumber:20}},props.data.map(function(item,index){return React.createElement(_reactNative.TouchableOpacity,{onPress:function onPress(){return props.onChange&&props.onChange(index);},disabled:!props.onChange,style:[styles.tab,props.value===index?styles.tab_active:null,index===0?styles.tab_start:null,index===props.data.length-1?styles.tab_end:null],key:index.toString(),activeOpacity:0.7,__source:{fileName:_jsxFileName,lineNumber:22}},React.createElement(_Text.Text,{style:[styles.text,props.value===index?styles.text_active:null],type:"bold",small:true,__source:{fileName:_jsxFileName,lineNumber:34}},item));}));};exports.Selector=Selector;var styles=_reactNative.StyleSheet.create({container:{height:30,marginLeft:1,marginVertical:7.5,flexDirection:'row'},tab:{borderWidth:1,borderColor:_utils.Colors.primary,marginLeft:-1,alignItems:'center',justifyContent:'center',flex:1},tab_start:{borderTopLeftRadius:15,borderBottomLeftRadius:15},tab_end:{borderTopRightRadius:15,borderBottomRightRadius:15},tab_active:{backgroundColor:_utils.Colors.primary},text:{color:_utils.Colors.primary},text_active:{color:_utils.Colors.white}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2NvcmUvU2VsZWN0b3IudHN4Il0sIm5hbWVzIjpbIlNlbGVjdG9yIiwicHJvcHMiLCJkYXRhIiwic3R5bGVzIiwiY29udGFpbmVyIiwibWFwIiwiaXRlbSIsImluZGV4Iiwib25DaGFuZ2UiLCJ0YWIiLCJ2YWx1ZSIsInRhYl9hY3RpdmUiLCJ0YWJfc3RhcnQiLCJsZW5ndGgiLCJ0YWJfZW5kIiwidG9TdHJpbmciLCJ0ZXh0IiwidGV4dF9hY3RpdmUiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiaGVpZ2h0IiwibWFyZ2luTGVmdCIsIm1hcmdpblZlcnRpY2FsIiwiZmxleERpcmVjdGlvbiIsImJvcmRlcldpZHRoIiwiYm9yZGVyQ29sb3IiLCJDb2xvcnMiLCJwcmltYXJ5IiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiZmxleCIsImJvcmRlclRvcExlZnRSYWRpdXMiLCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIiwiYm9yZGVyVG9wUmlnaHRSYWRpdXMiLCJib3JkZXJCb3R0b21SaWdodFJhZGl1cyIsImJhY2tncm91bmRDb2xvciIsImNvbG9yIiwid2hpdGUiXSwibWFwcGluZ3MiOiJzS0FBQSxvREFDQSx5Q0FHQSxrQ0FDQSw0QixxR0FRQSxHQUFNQSxDQUFBQSxRQUFpQyxDQUFHLFFBQXBDQSxDQUFBQSxRQUFvQyxDQUFBQyxLQUFLLENBQUksQ0FDL0MsR0FBSSxDQUFDQSxLQUFLLENBQUNDLElBQVgsQ0FBaUIsQ0FDYixNQUFPLEtBQVAsQ0FDSCxDQUVELE1BQ0kscUJBQUMsaUJBQUQsRUFBTSxLQUFLLENBQUVDLE1BQU0sQ0FBQ0MsU0FBcEIsaURBQ0tILEtBQUssQ0FBQ0MsSUFBTixDQUFXRyxHQUFYLENBQWUsU0FBQ0MsSUFBRCxDQUFlQyxLQUFmLFFBQ1oscUJBQUMsNkJBQUQsRUFDSSxPQUFPLENBQUUseUJBQU1OLENBQUFBLEtBQUssQ0FBQ08sUUFBTixFQUFrQlAsS0FBSyxDQUFDTyxRQUFOLENBQWVELEtBQWYsQ0FBeEIsRUFEYixDQUVJLFFBQVEsQ0FBRSxDQUFDTixLQUFLLENBQUNPLFFBRnJCLENBR0ksS0FBSyxDQUFFLENBQ0hMLE1BQU0sQ0FBQ00sR0FESixDQUVIUixLQUFLLENBQUNTLEtBQU4sR0FBZ0JILEtBQWhCLENBQXdCSixNQUFNLENBQUNRLFVBQS9CLENBQTRDLElBRnpDLENBR0hKLEtBQUssR0FBSyxDQUFWLENBQWNKLE1BQU0sQ0FBQ1MsU0FBckIsQ0FBaUMsSUFIOUIsQ0FJSEwsS0FBSyxHQUFLTixLQUFLLENBQUNDLElBQU4sQ0FBV1csTUFBWCxDQUFvQixDQUE5QixDQUFrQ1YsTUFBTSxDQUFDVyxPQUF6QyxDQUFtRCxJQUpoRCxDQUhYLENBU0ksR0FBRyxDQUFFUCxLQUFLLENBQUNRLFFBQU4sRUFUVCxDQVVJLGFBQWEsQ0FBRSxHQVZuQixpREFZSSxvQkFBQyxVQUFELEVBQ0ksS0FBSyxDQUFFLENBQ0haLE1BQU0sQ0FBQ2EsSUFESixDQUVIZixLQUFLLENBQUNTLEtBQU4sR0FBZ0JILEtBQWhCLENBQXdCSixNQUFNLENBQUNjLFdBQS9CLENBQTZDLElBRjFDLENBRFgsQ0FLSSxJQUFJLENBQUMsTUFMVCxDQU1JLEtBQUssS0FOVCxpREFRS1gsSUFSTCxDQVpKLENBRFksRUFBZixDQURMLENBREosQ0E2QkgsQ0FsQ0QsQywwQkFvQ0EsR0FBTUgsQ0FBQUEsTUFBTSxDQUFHZSx3QkFBV0MsTUFBWCxDQUFrQixDQUM3QmYsU0FBUyxDQUFFLENBQ1BnQixNQUFNLENBQUUsRUFERCxDQUVQQyxVQUFVLENBQUUsQ0FGTCxDQUdQQyxjQUFjLENBQUUsR0FIVCxDQUlQQyxhQUFhLENBQUUsS0FKUixDQURrQixDQU83QmQsR0FBRyxDQUFFLENBQ0RlLFdBQVcsQ0FBRSxDQURaLENBRURDLFdBQVcsQ0FBRUMsY0FBT0MsT0FGbkIsQ0FHRE4sVUFBVSxDQUFFLENBQUMsQ0FIWixDQUlETyxVQUFVLENBQUUsUUFKWCxDQUtEQyxjQUFjLENBQUUsUUFMZixDQU1EQyxJQUFJLENBQUUsQ0FOTCxDQVB3QixDQWU3QmxCLFNBQVMsQ0FBRSxDQUNQbUIsbUJBQW1CLENBQUUsRUFEZCxDQUVQQyxzQkFBc0IsQ0FBRSxFQUZqQixDQWZrQixDQW1CN0JsQixPQUFPLENBQUUsQ0FDTG1CLG9CQUFvQixDQUFFLEVBRGpCLENBRUxDLHVCQUF1QixDQUFFLEVBRnBCLENBbkJvQixDQXVCN0J2QixVQUFVLENBQUUsQ0FDUndCLGVBQWUsQ0FBRVQsY0FBT0MsT0FEaEIsQ0F2QmlCLENBMEI3QlgsSUFBSSxDQUFFLENBQ0ZvQixLQUFLLENBQUVWLGNBQU9DLE9BRFosQ0ExQnVCLENBNkI3QlYsV0FBVyxDQUFFLENBQ1RtQixLQUFLLENBQUVWLGNBQU9XLEtBREwsQ0E3QmdCLENBQWxCLENBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBTdHlsZVNoZWV0LCBWaWV3LCBUb3VjaGFibGVPcGFjaXR5IH0gZnJvbSAncmVhY3QtbmF0aXZlJztcblxuLy8gTGlicmFyeVxuaW1wb3J0IHsgQ29sb3JzIH0gZnJvbSAndXRpbHMnO1xuaW1wb3J0IHsgVGV4dCB9IGZyb20gJy4vVGV4dCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU2VsZWN0b3JQcm9wcyB7XG4gICAgZGF0YTogc3RyaW5nW107XG4gICAgdmFsdWU/OiBudW1iZXI7XG4gICAgb25DaGFuZ2U/OiAoaW5kZXg6IG51bWJlcikgPT4gdm9pZDtcbn1cblxuY29uc3QgU2VsZWN0b3I6IFJlYWN0LkZDPFNlbGVjdG9yUHJvcHM+ID0gcHJvcHMgPT4ge1xuICAgIGlmICghcHJvcHMuZGF0YSkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNvbnRhaW5lcn0+XG4gICAgICAgICAgICB7cHJvcHMuZGF0YS5tYXAoKGl0ZW06IHN0cmluZywgaW5kZXg6IG51bWJlcikgPT4gKFxuICAgICAgICAgICAgICAgIDxUb3VjaGFibGVPcGFjaXR5XG4gICAgICAgICAgICAgICAgICAgIG9uUHJlc3M9eygpID0+IHByb3BzLm9uQ2hhbmdlICYmIHByb3BzLm9uQ2hhbmdlKGluZGV4KX1cbiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ9eyFwcm9wcy5vbkNoYW5nZX1cbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e1tcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlcy50YWIsXG4gICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy52YWx1ZSA9PT0gaW5kZXggPyBzdHlsZXMudGFiX2FjdGl2ZSA6IG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICBpbmRleCA9PT0gMCA/IHN0eWxlcy50YWJfc3RhcnQgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPT09IHByb3BzLmRhdGEubGVuZ3RoIC0gMSA/IHN0eWxlcy50YWJfZW5kIDogbnVsbFxuICAgICAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgICAgICBrZXk9e2luZGV4LnRvU3RyaW5nKCl9XG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZU9wYWNpdHk9ezAuN31cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxUZXh0XG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17W1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlcy50ZXh0LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLnZhbHVlID09PSBpbmRleCA/IHN0eWxlcy50ZXh0X2FjdGl2ZSA6IG51bGxcbiAgICAgICAgICAgICAgICAgICAgICAgIF19XG4gICAgICAgICAgICAgICAgICAgICAgICB0eXBlPVwiYm9sZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBzbWFsbFxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7aXRlbX1cbiAgICAgICAgICAgICAgICAgICAgPC9UZXh0PlxuICAgICAgICAgICAgICAgIDwvVG91Y2hhYmxlT3BhY2l0eT5cbiAgICAgICAgICAgICkpfVxuICAgICAgICA8L1ZpZXc+XG4gICAgKTtcbn07XG5cbmNvbnN0IHN0eWxlcyA9IFN0eWxlU2hlZXQuY3JlYXRlKHtcbiAgICBjb250YWluZXI6IHtcbiAgICAgICAgaGVpZ2h0OiAzMCxcbiAgICAgICAgbWFyZ2luTGVmdDogMSxcbiAgICAgICAgbWFyZ2luVmVydGljYWw6IDcuNSxcbiAgICAgICAgZmxleERpcmVjdGlvbjogJ3JvdydcbiAgICB9LFxuICAgIHRhYjoge1xuICAgICAgICBib3JkZXJXaWR0aDogMSxcbiAgICAgICAgYm9yZGVyQ29sb3I6IENvbG9ycy5wcmltYXJ5LFxuICAgICAgICBtYXJnaW5MZWZ0OiAtMSxcbiAgICAgICAgYWxpZ25JdGVtczogJ2NlbnRlcicsXG4gICAgICAgIGp1c3RpZnlDb250ZW50OiAnY2VudGVyJyxcbiAgICAgICAgZmxleDogMVxuICAgIH0sXG4gICAgdGFiX3N0YXJ0OiB7XG4gICAgICAgIGJvcmRlclRvcExlZnRSYWRpdXM6IDE1LFxuICAgICAgICBib3JkZXJCb3R0b21MZWZ0UmFkaXVzOiAxNVxuICAgIH0sXG4gICAgdGFiX2VuZDoge1xuICAgICAgICBib3JkZXJUb3BSaWdodFJhZGl1czogMTUsXG4gICAgICAgIGJvcmRlckJvdHRvbVJpZ2h0UmFkaXVzOiAxNVxuICAgIH0sXG4gICAgdGFiX2FjdGl2ZToge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IENvbG9ycy5wcmltYXJ5XG4gICAgfSxcbiAgICB0ZXh0OiB7XG4gICAgICAgIGNvbG9yOiBDb2xvcnMucHJpbWFyeVxuICAgIH0sXG4gICAgdGV4dF9hY3RpdmU6IHtcbiAgICAgICAgY29sb3I6IENvbG9ycy53aGl0ZVxuICAgIH1cbn0pO1xuXG5leHBvcnQgeyBTZWxlY3RvciB9O1xuIl19