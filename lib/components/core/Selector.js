var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.Selector=void 0;var React=_interopRequireWildcard(require("react"));var _StyleSheet=_interopRequireDefault(require("react-native-web/dist/cjs/exports/StyleSheet"));var _View=_interopRequireDefault(require("react-native-web/dist/cjs/exports/View"));var _TouchableOpacity=_interopRequireDefault(require("react-native-web/dist/cjs/exports/TouchableOpacity"));var _utils=require("../../utils");var _Text=require("./Text");var _jsxFileName="/Users/juanmanuelcb/Projects/Heyou/Library/src/components/core/Selector.tsx";var Selector=function Selector(props){if(!props.data){return null;}return React.createElement(_View.default,{style:[styles.container,props.style],__source:{fileName:_jsxFileName,lineNumber:27}},props.data.map(function(item,index){return React.createElement(_TouchableOpacity.default,{onPress:function onPress(){return props.onChange&&props.onChange(index);},disabled:!props.onChange,style:[styles.tab,props.value===index?styles.tab_active:null,index===0?styles.tab_start:null,index===props.data.length-1?styles.tab_end:null],key:index.toString(),activeOpacity:0.7,__source:{fileName:_jsxFileName,lineNumber:29}},React.createElement(_Text.Text,{style:[styles.text,props.value===index?styles.text_active:null],type:"bold",small:true,__source:{fileName:_jsxFileName,lineNumber:41}},item));}));};exports.Selector=Selector;var styles=_StyleSheet.default.create({container:{height:30,marginLeft:1,flexDirection:'row'},tab:{borderWidth:1,borderColor:_utils.Colors.primary,marginLeft:-1,alignItems:'center',justifyContent:'center',flex:1},tab_start:{borderTopLeftRadius:15,borderBottomLeftRadius:15},tab_end:{borderTopRightRadius:15,borderBottomRightRadius:15},tab_active:{backgroundColor:_utils.Colors.primary},text:{color:_utils.Colors.primary},text_active:{color:_utils.Colors.white}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL2NvcmUvU2VsZWN0b3IudHN4Il0sIm5hbWVzIjpbIlNlbGVjdG9yIiwicHJvcHMiLCJkYXRhIiwic3R5bGVzIiwiY29udGFpbmVyIiwic3R5bGUiLCJtYXAiLCJpdGVtIiwiaW5kZXgiLCJvbkNoYW5nZSIsInRhYiIsInZhbHVlIiwidGFiX2FjdGl2ZSIsInRhYl9zdGFydCIsImxlbmd0aCIsInRhYl9lbmQiLCJ0b1N0cmluZyIsInRleHQiLCJ0ZXh0X2FjdGl2ZSIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJoZWlnaHQiLCJtYXJnaW5MZWZ0IiwiZmxleERpcmVjdGlvbiIsImJvcmRlcldpZHRoIiwiYm9yZGVyQ29sb3IiLCJDb2xvcnMiLCJwcmltYXJ5IiwiYWxpZ25JdGVtcyIsImp1c3RpZnlDb250ZW50IiwiZmxleCIsImJvcmRlclRvcExlZnRSYWRpdXMiLCJib3JkZXJCb3R0b21MZWZ0UmFkaXVzIiwiYm9yZGVyVG9wUmlnaHRSYWRpdXMiLCJib3JkZXJCb3R0b21SaWdodFJhZGl1cyIsImJhY2tncm91bmRDb2xvciIsImNvbG9yIiwid2hpdGUiXSwibWFwcGluZ3MiOiJ5UEFBQSxvRCxnU0FVQSxrQ0FDQSw0QiwrRkFTQSxHQUFNQSxDQUFBQSxRQUFpQyxDQUFHLFFBQXBDQSxDQUFBQSxRQUFvQyxDQUFBQyxLQUFLLENBQUksQ0FDL0MsR0FBSSxDQUFDQSxLQUFLLENBQUNDLElBQVgsQ0FBaUIsQ0FDYixNQUFPLEtBQVAsQ0FDSCxDQUVELE1BQ0kscUJBQUMsYUFBRCxFQUFNLEtBQUssQ0FBRSxDQUFDQyxNQUFNLENBQUNDLFNBQVIsQ0FBbUJILEtBQUssQ0FBQ0ksS0FBekIsQ0FBYixpREFDS0osS0FBSyxDQUFDQyxJQUFOLENBQVdJLEdBQVgsQ0FBZSxTQUFDQyxJQUFELENBQWVDLEtBQWYsUUFDWixxQkFBQyx5QkFBRCxFQUNJLE9BQU8sQ0FBRSx5QkFBTVAsQ0FBQUEsS0FBSyxDQUFDUSxRQUFOLEVBQWtCUixLQUFLLENBQUNRLFFBQU4sQ0FBZUQsS0FBZixDQUF4QixFQURiLENBRUksUUFBUSxDQUFFLENBQUNQLEtBQUssQ0FBQ1EsUUFGckIsQ0FHSSxLQUFLLENBQUUsQ0FDSE4sTUFBTSxDQUFDTyxHQURKLENBRUhULEtBQUssQ0FBQ1UsS0FBTixHQUFnQkgsS0FBaEIsQ0FBd0JMLE1BQU0sQ0FBQ1MsVUFBL0IsQ0FBNEMsSUFGekMsQ0FHSEosS0FBSyxHQUFLLENBQVYsQ0FBY0wsTUFBTSxDQUFDVSxTQUFyQixDQUFpQyxJQUg5QixDQUlITCxLQUFLLEdBQUtQLEtBQUssQ0FBQ0MsSUFBTixDQUFXWSxNQUFYLENBQW9CLENBQTlCLENBQWtDWCxNQUFNLENBQUNZLE9BQXpDLENBQW1ELElBSmhELENBSFgsQ0FTSSxHQUFHLENBQUVQLEtBQUssQ0FBQ1EsUUFBTixFQVRULENBVUksYUFBYSxDQUFFLEdBVm5CLGlEQVlJLG9CQUFDLFVBQUQsRUFDSSxLQUFLLENBQUUsQ0FDSGIsTUFBTSxDQUFDYyxJQURKLENBRUhoQixLQUFLLENBQUNVLEtBQU4sR0FBZ0JILEtBQWhCLENBQXdCTCxNQUFNLENBQUNlLFdBQS9CLENBQTZDLElBRjFDLENBRFgsQ0FLSSxJQUFJLENBQUMsTUFMVCxDQU1JLEtBQUssS0FOVCxpREFRS1gsSUFSTCxDQVpKLENBRFksRUFBZixDQURMLENBREosQ0E2QkgsQ0FsQ0QsQywwQkFvQ0EsR0FBTUosQ0FBQUEsTUFBTSxDQUFHZ0Isb0JBQVdDLE1BQVgsQ0FBa0IsQ0FDN0JoQixTQUFTLENBQUUsQ0FDUGlCLE1BQU0sQ0FBRSxFQURELENBRVBDLFVBQVUsQ0FBRSxDQUZMLENBR1BDLGFBQWEsQ0FBRSxLQUhSLENBRGtCLENBTTdCYixHQUFHLENBQUUsQ0FDRGMsV0FBVyxDQUFFLENBRFosQ0FFREMsV0FBVyxDQUFFQyxjQUFPQyxPQUZuQixDQUdETCxVQUFVLENBQUUsQ0FBQyxDQUhaLENBSURNLFVBQVUsQ0FBRSxRQUpYLENBS0RDLGNBQWMsQ0FBRSxRQUxmLENBTURDLElBQUksQ0FBRSxDQU5MLENBTndCLENBYzdCakIsU0FBUyxDQUFFLENBQ1BrQixtQkFBbUIsQ0FBRSxFQURkLENBRVBDLHNCQUFzQixDQUFFLEVBRmpCLENBZGtCLENBa0I3QmpCLE9BQU8sQ0FBRSxDQUNMa0Isb0JBQW9CLENBQUUsRUFEakIsQ0FFTEMsdUJBQXVCLENBQUUsRUFGcEIsQ0FsQm9CLENBc0I3QnRCLFVBQVUsQ0FBRSxDQUNSdUIsZUFBZSxDQUFFVCxjQUFPQyxPQURoQixDQXRCaUIsQ0F5QjdCVixJQUFJLENBQUUsQ0FDRm1CLEtBQUssQ0FBRVYsY0FBT0MsT0FEWixDQXpCdUIsQ0E0QjdCVCxXQUFXLENBQUUsQ0FDVGtCLEtBQUssQ0FBRVYsY0FBT1csS0FETCxDQTVCZ0IsQ0FBbEIsQ0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7XG4gICAgU3R5bGVTaGVldCxcbiAgICBTdHlsZVByb3AsXG4gICAgVmlldyxcbiAgICBWaWV3U3R5bGUsXG4gICAgVG91Y2hhYmxlT3BhY2l0eVxufSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG4vLyBMaWJyYXJ5XG5pbXBvcnQgeyBDb2xvcnMgfSBmcm9tICd1dGlscyc7XG5pbXBvcnQgeyBUZXh0IH0gZnJvbSAnLi9UZXh0JztcblxuZXhwb3J0IGludGVyZmFjZSBTZWxlY3RvclByb3BzIHtcbiAgICBkYXRhOiBzdHJpbmdbXTtcbiAgICB2YWx1ZT86IG51bWJlcjtcbiAgICBvbkNoYW5nZT86IChpbmRleDogbnVtYmVyKSA9PiB2b2lkO1xuICAgIHN0eWxlPzogU3R5bGVQcm9wPFZpZXdTdHlsZT47XG59XG5cbmNvbnN0IFNlbGVjdG9yOiBSZWFjdC5GQzxTZWxlY3RvclByb3BzPiA9IHByb3BzID0+IHtcbiAgICBpZiAoIXByb3BzLmRhdGEpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPFZpZXcgc3R5bGU9e1tzdHlsZXMuY29udGFpbmVyLCBwcm9wcy5zdHlsZV19PlxuICAgICAgICAgICAge3Byb3BzLmRhdGEubWFwKChpdGVtOiBzdHJpbmcsIGluZGV4OiBudW1iZXIpID0+IChcbiAgICAgICAgICAgICAgICA8VG91Y2hhYmxlT3BhY2l0eVxuICAgICAgICAgICAgICAgICAgICBvblByZXNzPXsoKSA9PiBwcm9wcy5vbkNoYW5nZSAmJiBwcm9wcy5vbkNoYW5nZShpbmRleCl9XG4gICAgICAgICAgICAgICAgICAgIGRpc2FibGVkPXshcHJvcHMub25DaGFuZ2V9XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXtbXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXMudGFiLFxuICAgICAgICAgICAgICAgICAgICAgICAgcHJvcHMudmFsdWUgPT09IGluZGV4ID8gc3R5bGVzLnRhYl9hY3RpdmUgOiBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgaW5kZXggPT09IDAgPyBzdHlsZXMudGFiX3N0YXJ0IDogbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGluZGV4ID09PSBwcm9wcy5kYXRhLmxlbmd0aCAtIDEgPyBzdHlsZXMudGFiX2VuZCA6IG51bGxcbiAgICAgICAgICAgICAgICAgICAgXX1cbiAgICAgICAgICAgICAgICAgICAga2V5PXtpbmRleC50b1N0cmluZygpfVxuICAgICAgICAgICAgICAgICAgICBhY3RpdmVPcGFjaXR5PXswLjd9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8VGV4dFxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e1tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZXMudGV4dCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm9wcy52YWx1ZSA9PT0gaW5kZXggPyBzdHlsZXMudGV4dF9hY3RpdmUgOiBudWxsXG4gICAgICAgICAgICAgICAgICAgICAgICBdfVxuICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJvbGRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgc21hbGxcbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAge2l0ZW19XG4gICAgICAgICAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgICAgICA8L1RvdWNoYWJsZU9wYWNpdHk+XG4gICAgICAgICAgICApKX1cbiAgICAgICAgPC9WaWV3PlxuICAgICk7XG59O1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgY29udGFpbmVyOiB7XG4gICAgICAgIGhlaWdodDogMzAsXG4gICAgICAgIG1hcmdpbkxlZnQ6IDEsXG4gICAgICAgIGZsZXhEaXJlY3Rpb246ICdyb3cnXG4gICAgfSxcbiAgICB0YWI6IHtcbiAgICAgICAgYm9yZGVyV2lkdGg6IDEsXG4gICAgICAgIGJvcmRlckNvbG9yOiBDb2xvcnMucHJpbWFyeSxcbiAgICAgICAgbWFyZ2luTGVmdDogLTEsXG4gICAgICAgIGFsaWduSXRlbXM6ICdjZW50ZXInLFxuICAgICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXG4gICAgICAgIGZsZXg6IDFcbiAgICB9LFxuICAgIHRhYl9zdGFydDoge1xuICAgICAgICBib3JkZXJUb3BMZWZ0UmFkaXVzOiAxNSxcbiAgICAgICAgYm9yZGVyQm90dG9tTGVmdFJhZGl1czogMTVcbiAgICB9LFxuICAgIHRhYl9lbmQ6IHtcbiAgICAgICAgYm9yZGVyVG9wUmlnaHRSYWRpdXM6IDE1LFxuICAgICAgICBib3JkZXJCb3R0b21SaWdodFJhZGl1czogMTVcbiAgICB9LFxuICAgIHRhYl9hY3RpdmU6IHtcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBDb2xvcnMucHJpbWFyeVxuICAgIH0sXG4gICAgdGV4dDoge1xuICAgICAgICBjb2xvcjogQ29sb3JzLnByaW1hcnlcbiAgICB9LFxuICAgIHRleHRfYWN0aXZlOiB7XG4gICAgICAgIGNvbG9yOiBDb2xvcnMud2hpdGVcbiAgICB9XG59KTtcblxuZXhwb3J0IHsgU2VsZWN0b3IgfTtcbiJdfQ==