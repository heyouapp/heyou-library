var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.SnapError=void 0;var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _core=require("../core");var _utils=require("../../utils");var _jsxFileName="/Users/juanmanuelcb/Projects/Heyou/Library/src/components/structure/SnapError.tsx";var SnapError=function SnapError(props){return React.createElement(_reactNative.SafeAreaView,{style:[styles.container,_reactNative.Platform.OS==='web'?styles.container_web:styles.container_mobile],__source:{fileName:_jsxFileName,lineNumber:15}},React.createElement(_reactNative.View,{style:styles.content,__source:{fileName:_jsxFileName,lineNumber:23}},React.createElement(_core.Text,{type:"semibold",style:styles.text,__source:{fileName:_jsxFileName,lineNumber:24}},props.message),React.createElement(_core.Button,{type:"secondary",position:"end",small:true,onPress:props.onClose,style:styles.button,__source:{fileName:_jsxFileName,lineNumber:27}},props.closeText||'OK')));};exports.SnapError=SnapError;var styles=_reactNative.StyleSheet.create({container:{position:'absolute',backgroundColor:_utils.Colors.error,zIndex:10},container_mobile:{top:0,left:0,right:0},container_web:{borderRadius:15,bottom:15,right:15,maxWidth:375},content:{padding:15},text:{marginBottom:10,color:_utils.Colors.white},button:{borderColor:'transparent'}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3N0cnVjdHVyZS9TbmFwRXJyb3IudHN4Il0sIm5hbWVzIjpbIlNuYXBFcnJvciIsInByb3BzIiwic3R5bGVzIiwiY29udGFpbmVyIiwiUGxhdGZvcm0iLCJPUyIsImNvbnRhaW5lcl93ZWIiLCJjb250YWluZXJfbW9iaWxlIiwiY29udGVudCIsInRleHQiLCJtZXNzYWdlIiwib25DbG9zZSIsImJ1dHRvbiIsImNsb3NlVGV4dCIsIlN0eWxlU2hlZXQiLCJjcmVhdGUiLCJwb3NpdGlvbiIsImJhY2tncm91bmRDb2xvciIsIkNvbG9ycyIsImVycm9yIiwiekluZGV4IiwidG9wIiwibGVmdCIsInJpZ2h0IiwiYm9yZGVyUmFkaXVzIiwiYm90dG9tIiwibWF4V2lkdGgiLCJwYWRkaW5nIiwibWFyZ2luQm90dG9tIiwiY29sb3IiLCJ3aGl0ZSIsImJvcmRlckNvbG9yIl0sIm1hcHBpbmdzIjoidUtBQUEsb0RBQ0EseUNBR0EsNkJBQ0Esa0MscUdBUUEsR0FBTUEsQ0FBQUEsU0FBUyxDQUFHLFFBQVpBLENBQUFBLFNBQVksQ0FBQ0MsS0FBRCxRQUNkLHFCQUFDLHlCQUFELEVBQ0ksS0FBSyxDQUFFLENBQ0hDLE1BQU0sQ0FBQ0MsU0FESixDQUVIQyxzQkFBU0MsRUFBVCxHQUFnQixLQUFoQixDQUNNSCxNQUFNLENBQUNJLGFBRGIsQ0FFTUosTUFBTSxDQUFDSyxnQkFKVixDQURYLGlEQVFJLG9CQUFDLGlCQUFELEVBQU0sS0FBSyxDQUFFTCxNQUFNLENBQUNNLE9BQXBCLGlEQUNJLG9CQUFDLFVBQUQsRUFBTSxJQUFJLENBQUMsVUFBWCxDQUFzQixLQUFLLENBQUVOLE1BQU0sQ0FBQ08sSUFBcEMsaURBQ0tSLEtBQUssQ0FBQ1MsT0FEWCxDQURKLENBSUksb0JBQUMsWUFBRCxFQUNJLElBQUksQ0FBQyxXQURULENBRUksUUFBUSxDQUFDLEtBRmIsQ0FHSSxLQUFLLEtBSFQsQ0FJSSxPQUFPLENBQUVULEtBQUssQ0FBQ1UsT0FKbkIsQ0FLSSxLQUFLLENBQUVULE1BQU0sQ0FBQ1UsTUFMbEIsaURBT0tYLEtBQUssQ0FBQ1ksU0FBTixFQUFtQixJQVB4QixDQUpKLENBUkosQ0FEYyxFQUFsQixDLDRCQTBCQSxHQUFNWCxDQUFBQSxNQUFNLENBQUdZLHdCQUFXQyxNQUFYLENBQWtCLENBQzdCWixTQUFTLENBQUUsQ0FDUGEsUUFBUSxDQUFFLFVBREgsQ0FFUEMsZUFBZSxDQUFFQyxjQUFPQyxLQUZqQixDQUdQQyxNQUFNLENBQUUsRUFIRCxDQURrQixDQU03QmIsZ0JBQWdCLENBQUUsQ0FDZGMsR0FBRyxDQUFFLENBRFMsQ0FFZEMsSUFBSSxDQUFFLENBRlEsQ0FHZEMsS0FBSyxDQUFFLENBSE8sQ0FOVyxDQVc3QmpCLGFBQWEsQ0FBRSxDQUNYa0IsWUFBWSxDQUFFLEVBREgsQ0FFWEMsTUFBTSxDQUFFLEVBRkcsQ0FHWEYsS0FBSyxDQUFFLEVBSEksQ0FJWEcsUUFBUSxDQUFFLEdBSkMsQ0FYYyxDQWlCN0JsQixPQUFPLENBQUUsQ0FDTG1CLE9BQU8sQ0FBRSxFQURKLENBakJvQixDQW9CN0JsQixJQUFJLENBQUUsQ0FDRm1CLFlBQVksQ0FBRSxFQURaLENBRUZDLEtBQUssQ0FBRVgsY0FBT1ksS0FGWixDQXBCdUIsQ0F3QjdCbEIsTUFBTSxDQUFFLENBQ0ptQixXQUFXLENBQUUsYUFEVCxDQXhCcUIsQ0FBbEIsQ0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFNhZmVBcmVhVmlldywgVmlldywgUGxhdGZvcm0gfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG4vLyBMaWJyYXJ5XG5pbXBvcnQgeyBUZXh0LCBCdXR0b24gfSBmcm9tICdjb21wb25lbnRzL2NvcmUnO1xuaW1wb3J0IHsgQ29sb3JzIH0gZnJvbSAndXRpbHMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNuYXBFcnJvclByb3BzIHtcbiAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgY2xvc2VUZXh0Pzogc3RyaW5nO1xuICAgIG9uQ2xvc2U6ICgpID0+IHZvaWQ7XG59XG5cbmNvbnN0IFNuYXBFcnJvciA9IChwcm9wczogU25hcEVycm9yUHJvcHMpID0+IChcbiAgICA8U2FmZUFyZWFWaWV3XG4gICAgICAgIHN0eWxlPXtbXG4gICAgICAgICAgICBzdHlsZXMuY29udGFpbmVyLFxuICAgICAgICAgICAgUGxhdGZvcm0uT1MgPT09ICd3ZWInXG4gICAgICAgICAgICAgICAgPyBzdHlsZXMuY29udGFpbmVyX3dlYlxuICAgICAgICAgICAgICAgIDogc3R5bGVzLmNvbnRhaW5lcl9tb2JpbGUsXG4gICAgICAgIF19XG4gICAgPlxuICAgICAgICA8VmlldyBzdHlsZT17c3R5bGVzLmNvbnRlbnR9PlxuICAgICAgICAgICAgPFRleHQgdHlwZT1cInNlbWlib2xkXCIgc3R5bGU9e3N0eWxlcy50ZXh0fT5cbiAgICAgICAgICAgICAgICB7cHJvcHMubWVzc2FnZX1cbiAgICAgICAgICAgIDwvVGV4dD5cbiAgICAgICAgICAgIDxCdXR0b25cbiAgICAgICAgICAgICAgICB0eXBlPVwic2Vjb25kYXJ5XCJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbj1cImVuZFwiXG4gICAgICAgICAgICAgICAgc21hbGxcbiAgICAgICAgICAgICAgICBvblByZXNzPXtwcm9wcy5vbkNsb3NlfVxuICAgICAgICAgICAgICAgIHN0eWxlPXtzdHlsZXMuYnV0dG9ufVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIHtwcm9wcy5jbG9zZVRleHQgfHwgJ09LJ31cbiAgICAgICAgICAgIDwvQnV0dG9uPlxuICAgICAgICA8L1ZpZXc+XG4gICAgPC9TYWZlQXJlYVZpZXc+XG4pO1xuXG5jb25zdCBzdHlsZXMgPSBTdHlsZVNoZWV0LmNyZWF0ZSh7XG4gICAgY29udGFpbmVyOiB7XG4gICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IENvbG9ycy5lcnJvcixcbiAgICAgICAgekluZGV4OiAxMCxcbiAgICB9LFxuICAgIGNvbnRhaW5lcl9tb2JpbGU6IHtcbiAgICAgICAgdG9wOiAwLFxuICAgICAgICBsZWZ0OiAwLFxuICAgICAgICByaWdodDogMCxcbiAgICB9LFxuICAgIGNvbnRhaW5lcl93ZWI6IHtcbiAgICAgICAgYm9yZGVyUmFkaXVzOiAxNSxcbiAgICAgICAgYm90dG9tOiAxNSxcbiAgICAgICAgcmlnaHQ6IDE1LFxuICAgICAgICBtYXhXaWR0aDogMzc1LFxuICAgIH0sXG4gICAgY29udGVudDoge1xuICAgICAgICBwYWRkaW5nOiAxNSxcbiAgICB9LFxuICAgIHRleHQ6IHtcbiAgICAgICAgbWFyZ2luQm90dG9tOiAxMCxcbiAgICAgICAgY29sb3I6IENvbG9ycy53aGl0ZSxcbiAgICB9LFxuICAgIGJ1dHRvbjoge1xuICAgICAgICBib3JkZXJDb2xvcjogJ3RyYW5zcGFyZW50JyxcbiAgICB9LFxufSk7XG5cbmV4cG9ydCB7IFNuYXBFcnJvciB9O1xuIl19