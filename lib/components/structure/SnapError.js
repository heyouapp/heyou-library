var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.SnapError=void 0;var React=_interopRequireWildcard(require("react"));var _reactNative=require("react-native");var _core=require("../core");var _utils=require("../../utils");var _jsxFileName="/Users/juanmanuelcb/Projects/Heyou/Library/src/components/structure/SnapError.tsx";var SnapError=function SnapError(props){return React.createElement(_reactNative.SafeAreaView,{style:[styles.container,_reactNative.Platform.OS!=='web'&&styles.container_mobile],__source:{fileName:_jsxFileName,lineNumber:15}},React.createElement(_reactNative.View,{style:styles.content,__source:{fileName:_jsxFileName,lineNumber:21}},React.createElement(_core.Text,{type:"semibold",style:styles.text,__source:{fileName:_jsxFileName,lineNumber:22}},props.message),React.createElement(_core.Button,{type:"secondary",position:"end",small:true,onPress:props.onClose,style:styles.button,__source:{fileName:_jsxFileName,lineNumber:25}},props.closeText||'OK')));};exports.SnapError=SnapError;var styles=_reactNative.StyleSheet.create({container:{backgroundColor:_utils.Colors.error},container_mobile:{position:'absolute',top:0,left:0,right:0,zIndex:10},container_web:{borderRadius:15,maxWidth:375},content:{padding:15},text:{marginBottom:10,color:_utils.Colors.white},button:{borderColor:'transparent'}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb21wb25lbnRzL3N0cnVjdHVyZS9TbmFwRXJyb3IudHN4Il0sIm5hbWVzIjpbIlNuYXBFcnJvciIsInByb3BzIiwic3R5bGVzIiwiY29udGFpbmVyIiwiUGxhdGZvcm0iLCJPUyIsImNvbnRhaW5lcl9tb2JpbGUiLCJjb250ZW50IiwidGV4dCIsIm1lc3NhZ2UiLCJvbkNsb3NlIiwiYnV0dG9uIiwiY2xvc2VUZXh0IiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsImJhY2tncm91bmRDb2xvciIsIkNvbG9ycyIsImVycm9yIiwicG9zaXRpb24iLCJ0b3AiLCJsZWZ0IiwicmlnaHQiLCJ6SW5kZXgiLCJjb250YWluZXJfd2ViIiwiYm9yZGVyUmFkaXVzIiwibWF4V2lkdGgiLCJwYWRkaW5nIiwibWFyZ2luQm90dG9tIiwiY29sb3IiLCJ3aGl0ZSIsImJvcmRlckNvbG9yIl0sIm1hcHBpbmdzIjoidUtBQUEsb0RBQ0EseUNBR0EsNkJBQ0Esa0MscUdBUUEsR0FBTUEsQ0FBQUEsU0FBUyxDQUFHLFFBQVpBLENBQUFBLFNBQVksQ0FBQ0MsS0FBRCxRQUNkLHFCQUFDLHlCQUFELEVBQ0ksS0FBSyxDQUFFLENBQ0hDLE1BQU0sQ0FBQ0MsU0FESixDQUVIQyxzQkFBU0MsRUFBVCxHQUFnQixLQUFoQixFQUF5QkgsTUFBTSxDQUFDSSxnQkFGN0IsQ0FEWCxpREFNSSxvQkFBQyxpQkFBRCxFQUFNLEtBQUssQ0FBRUosTUFBTSxDQUFDSyxPQUFwQixpREFDSSxvQkFBQyxVQUFELEVBQU0sSUFBSSxDQUFDLFVBQVgsQ0FBc0IsS0FBSyxDQUFFTCxNQUFNLENBQUNNLElBQXBDLGlEQUNLUCxLQUFLLENBQUNRLE9BRFgsQ0FESixDQUlJLG9CQUFDLFlBQUQsRUFDSSxJQUFJLENBQUMsV0FEVCxDQUVJLFFBQVEsQ0FBQyxLQUZiLENBR0ksS0FBSyxLQUhULENBSUksT0FBTyxDQUFFUixLQUFLLENBQUNTLE9BSm5CLENBS0ksS0FBSyxDQUFFUixNQUFNLENBQUNTLE1BTGxCLGlEQU9LVixLQUFLLENBQUNXLFNBQU4sRUFBbUIsSUFQeEIsQ0FKSixDQU5KLENBRGMsRUFBbEIsQyw0QkF3QkEsR0FBTVYsQ0FBQUEsTUFBTSxDQUFHVyx3QkFBV0MsTUFBWCxDQUFrQixDQUM3QlgsU0FBUyxDQUFFLENBQ1BZLGVBQWUsQ0FBRUMsY0FBT0MsS0FEakIsQ0FEa0IsQ0FJN0JYLGdCQUFnQixDQUFFLENBQ2RZLFFBQVEsQ0FBRSxVQURJLENBRWRDLEdBQUcsQ0FBRSxDQUZTLENBR2RDLElBQUksQ0FBRSxDQUhRLENBSWRDLEtBQUssQ0FBRSxDQUpPLENBS2RDLE1BQU0sQ0FBRSxFQUxNLENBSlcsQ0FXN0JDLGFBQWEsQ0FBRSxDQUNYQyxZQUFZLENBQUUsRUFESCxDQUVYQyxRQUFRLENBQUUsR0FGQyxDQVhjLENBZTdCbEIsT0FBTyxDQUFFLENBQ0xtQixPQUFPLENBQUUsRUFESixDQWZvQixDQWtCN0JsQixJQUFJLENBQUUsQ0FDRm1CLFlBQVksQ0FBRSxFQURaLENBRUZDLEtBQUssQ0FBRVosY0FBT2EsS0FGWixDQWxCdUIsQ0FzQjdCbEIsTUFBTSxDQUFFLENBQ0ptQixXQUFXLENBQUUsYUFEVCxDQXRCcUIsQ0FBbEIsQ0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IFN0eWxlU2hlZXQsIFNhZmVBcmVhVmlldywgVmlldywgUGxhdGZvcm0gfSBmcm9tICdyZWFjdC1uYXRpdmUnO1xuXG4vLyBMaWJyYXJ5XG5pbXBvcnQgeyBUZXh0LCBCdXR0b24gfSBmcm9tICdjb21wb25lbnRzL2NvcmUnO1xuaW1wb3J0IHsgQ29sb3JzIH0gZnJvbSAndXRpbHMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNuYXBFcnJvclByb3BzIHtcbiAgICBtZXNzYWdlOiBzdHJpbmc7XG4gICAgY2xvc2VUZXh0Pzogc3RyaW5nO1xuICAgIG9uQ2xvc2U6ICgpID0+IHZvaWQ7XG59XG5cbmNvbnN0IFNuYXBFcnJvciA9IChwcm9wczogU25hcEVycm9yUHJvcHMpID0+IChcbiAgICA8U2FmZUFyZWFWaWV3XG4gICAgICAgIHN0eWxlPXtbXG4gICAgICAgICAgICBzdHlsZXMuY29udGFpbmVyLFxuICAgICAgICAgICAgUGxhdGZvcm0uT1MgIT09ICd3ZWInICYmIHN0eWxlcy5jb250YWluZXJfbW9iaWxlLFxuICAgICAgICBdfVxuICAgID5cbiAgICAgICAgPFZpZXcgc3R5bGU9e3N0eWxlcy5jb250ZW50fT5cbiAgICAgICAgICAgIDxUZXh0IHR5cGU9XCJzZW1pYm9sZFwiIHN0eWxlPXtzdHlsZXMudGV4dH0+XG4gICAgICAgICAgICAgICAge3Byb3BzLm1lc3NhZ2V9XG4gICAgICAgICAgICA8L1RleHQ+XG4gICAgICAgICAgICA8QnV0dG9uXG4gICAgICAgICAgICAgICAgdHlwZT1cInNlY29uZGFyeVwiXG4gICAgICAgICAgICAgICAgcG9zaXRpb249XCJlbmRcIlxuICAgICAgICAgICAgICAgIHNtYWxsXG4gICAgICAgICAgICAgICAgb25QcmVzcz17cHJvcHMub25DbG9zZX1cbiAgICAgICAgICAgICAgICBzdHlsZT17c3R5bGVzLmJ1dHRvbn1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7cHJvcHMuY2xvc2VUZXh0IHx8ICdPSyd9XG4gICAgICAgICAgICA8L0J1dHRvbj5cbiAgICAgICAgPC9WaWV3PlxuICAgIDwvU2FmZUFyZWFWaWV3PlxuKTtcblxuY29uc3Qgc3R5bGVzID0gU3R5bGVTaGVldC5jcmVhdGUoe1xuICAgIGNvbnRhaW5lcjoge1xuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IENvbG9ycy5lcnJvcixcbiAgICB9LFxuICAgIGNvbnRhaW5lcl9tb2JpbGU6IHtcbiAgICAgICAgcG9zaXRpb246ICdhYnNvbHV0ZScsXG4gICAgICAgIHRvcDogMCxcbiAgICAgICAgbGVmdDogMCxcbiAgICAgICAgcmlnaHQ6IDAsXG4gICAgICAgIHpJbmRleDogMTAsXG4gICAgfSxcbiAgICBjb250YWluZXJfd2ViOiB7XG4gICAgICAgIGJvcmRlclJhZGl1czogMTUsXG4gICAgICAgIG1heFdpZHRoOiAzNzUsXG4gICAgfSxcbiAgICBjb250ZW50OiB7XG4gICAgICAgIHBhZGRpbmc6IDE1LFxuICAgIH0sXG4gICAgdGV4dDoge1xuICAgICAgICBtYXJnaW5Cb3R0b206IDEwLFxuICAgICAgICBjb2xvcjogQ29sb3JzLndoaXRlLFxuICAgIH0sXG4gICAgYnV0dG9uOiB7XG4gICAgICAgIGJvcmRlckNvbG9yOiAndHJhbnNwYXJlbnQnLFxuICAgIH0sXG59KTtcblxuZXhwb3J0IHsgU25hcEVycm9yIH07XG4iXX0=